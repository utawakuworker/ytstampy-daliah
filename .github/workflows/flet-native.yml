# .github/workflows/build-windows.yml
name: Build Flet App for Windows
env:
  PYTHONUTF8: "1"
on:
  push:
    branches: [ "main" ]
    paths:
      - 'ytstampy-daliah/**'
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout repository code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install Flet CLI
      run: pip install flet pyinstaller

    - name: Install app dependencies
      run: pip install -r requirements.txt

    - name: Install Chocolatey and FFmpeg
      uses: crazy-max/ghaction-chocolatey@v3
      with:
        args: install ffmpeg -y --no-progress

    # New Step: Copy librosa .pyi stub files
    - name: Collect librosa stub files
      shell: bash
      run: |
        python -c "
        import os, shutil, librosa
        source_dir = os.path.dirname(librosa.__file__)
        dest_dir = os.path.join('assets', 'librosa_stubs')
        for root, dirs, files in os.walk(source_dir):
            for file in files:
                if file.endswith('.pyi'):
                    src_path = os.path.join(root, file)
                    # Preserve directory structure relative to librosa
                    rel_path = os.path.relpath(src_path, source_dir)
                    dest_path = os.path.join(dest_dir, rel_path)
                    os.makedirs(os.path.dirname(dest_path), exist_ok=True)
                    shutil.copy2(src_path, dest_path)
        "

    - name: Prepare assets directory
      shell: bash
      run: |
        mkdir -p assets
        cp "C:/ProgramData/chocolatey/bin/ffmpeg.exe" assets/ffmpeg.exe

    # Modified Build Step: Include .pyi files via --add-data
    - name: Build Flet Windows App
      shell: bash
      run: |
        flet build windows . \
          --output build/windows \

    # (Optional) Copy librosa .pyi stubs into build output
    - name: Copy librosa .pyi stubs into build output
      shell: bash
      run: |
        LIBROSA_BUILD_DIR="build/windows/site-packages/librosa"
        STUBS_DIR="assets/librosa_stubs"
        if [ -d "$LIBROSA_BUILD_DIR" ] && [ -d "$STUBS_DIR" ]; then
          cp -r $STUBS_DIR/* $LIBROSA_BUILD_DIR/
        fi

    - name: Install Visual C++ Redistributable
      run: choco install vcredist140 -y
      
    - name: Copy vcomp140.dll and msvcp140.dll to sklearn .libs
      shell: bash
      run: |
        DLL_SRC_DIR="/c/Windows/System32"
        DLL_DST_DIR="build/windows/site-packages/sklearn/.libs"
        mkdir -p "$DLL_DST_DIR"
        cp "$DLL_SRC_DIR/vcomp140.dll" "$DLL_DST_DIR/vcomp140.dll"
        cp "$DLL_SRC_DIR/msvcp140.dll" "$DLL_DST_DIR/msvcp140.dll"

    - name: Upload Windows Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ytstampy-windows-build
        path: build/windows/
